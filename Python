Variable Naming Technique:
------------------------------
Camel Case:
variableNameOne = "John"

Pascal Case
VariableNameOne = "john"

MyVariableName = "John"
variable_name_one = "John"

Variables:
------------------------------
Declare Variable:
VariableName1 = "VariableValue"
VariableName2 = VariableName1
VariableName3 = VariableName1, VariableName2
VariableName4, VariableName5, VariableName6 = "1", "2", "3"

Data Type:
------------------------------
VariableName = 5

View Data Type:
print(type(VariableName))

Set Data Type:

VariableName = str("Hello World")	str	
VariableName = int(20)	int	
VariableName = float(20.5)	float	
VariableName = complex(1j)	complex	
VariableName= list(("apple", "banana", "cherry"))	list	
VariableName= tuple(("apple", "banana", "cherry"))	tuple	
VariableName= range(6)	range	
VariableName= dict(name="John", age=36)	dict	
VariableName= set(("apple", "banana", "cherry"))	set	
VariableName= frozenset(("apple", "banana", "cherry"))	frozenset	
VariableName= bool(5)	bool	
VariableName= bytes(5)	bytes	
VariableName= bytearray(5)	bytearray	
VariableName= memoryview(bytes(5))	memoryview


Calculations:
------------------------------
print('Addition', 2 + 3)   # addition(+)
print('Subtraction', 3 - 1)   # subtraction(-)
print('Multiplication', 2 * 3)   # multiplication(*)
print('Division', 3 / 2)   # division(/)
print('exponential', 3 ** 2)  # exponential(**)
print('modulus', 3 % 2)   # modulus(%)
print('Division without remiander', 3 // 2)  # division without remainder

Replace numbers with variable names to calculate variables.

Operators:
------------------------------
print(3 > 2)     # True, because 3 is greater than 2
print(3 >= 2)    # True, because 3 is greater than 2
print(3 < 2)     # False,  because 3 is greater than 2
print(2 < 3)     # True, because 2 is less than 3
print(2 <= 3)    # True, because 2 is less than 3
print(3 == 2)    # False, because 3 is not equal to 2
print(3 != 2)    # True, because 3 is not equal to 2
print(len(first_name)) # Number of characters
print(len('mango') == len('avocado'))  # False
print(len('mango') != len('avocado'))  # True
print(len('mango') < len('avocado'))   # True
print(len('milk') != len('meat'))      # False
print(len('milk') == len('meat'))      # True
print(len('tomato') == len('potato'))  # True
print(len('python') > len('dragon'))   # False

Boolean:
------------------------------
print('True == True: ', True == True)
print('True == False: ', True == False)
print('False == False:', False == False)
print('True and True: ', True and True)
print('True or False:', True or False)

AND, OR and NOT
------------------------------
print(3 > 2 and 4 > 3) # True - because both statements are true
print(3 > 2 and 4 < 3) # False - because the second statement is false
print(3 < 2 and 4 < 3) # False - because both statements are false
print(3 > 2 or 4 > 3)  # True - because both statements are true
print(3 > 2 or 4 < 3)  # True - because one of the statement is true
print(3 < 2 or 4 < 3)  # False - because both statements are false
print(not 3 > 2)     # False - because 3 > 2 is true, then not True gives False
print(not True)      # False - Negation, the not operator turns true to false
print(not False)     # True
print(not not True)  # True
print(not not False) # False
